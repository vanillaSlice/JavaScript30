{"version":3,"sources":["11 - Custom Video Player/scripts/index.js"],"names":["playerElement","document","querySelector","videoElement","progressElement","progressBarElement","toggleElement","sliderElements","querySelectorAll","skipBtnElements","mouseDown","togglePlay","paused","play","pause","updateButton","icon","textContent","skip","currentTime","parseFloat","dataset","handleRangeUpdate","name","value","handleProgress","percent","duration","style","flexBasis","scrub","e","scrubTime","offsetX","offsetWidth","addEventListener","forEach","button","range"],"mappings":";AAIA,IAAMA,EAAgBC,SAASC,cAAc,cACvCC,EAAeH,EAAcE,cAAc,aAC3CE,EAAkBJ,EAAcE,cAAc,gBAC9CG,EAAqBL,EAAcE,cAAc,oBACjDI,EAAgBN,EAAcE,cAAc,cAC5CK,EAAiBP,EAAcQ,iBAAiB,cAChDC,EAAkBT,EAAcQ,iBAAiB,YAMnDE,GAAY,EAMhB,SAASC,IACHR,EAAaS,OACfT,EAAaU,OAEbV,EAAaW,QAIjB,SAASC,IACDC,IAAAA,EAAO,KAAKJ,OAAS,IAAM,MACjCN,EAAcW,YAAcD,EAG9B,SAASE,IACPf,EAAagB,aAAeC,WAAW,KAAKC,QAAQH,MAGtD,SAASI,IACPnB,EAAa,KAAKoB,MAAQ,KAAKC,MAGjC,SAASC,IACDC,IAAAA,EAAWvB,EAAagB,YAAchB,EAAawB,SAAY,IACrEtB,EAAmBuB,MAAMC,UAAeH,GAAAA,OAAAA,EAAxC,KAGF,SAASI,EAAMC,GACPC,IAAAA,EAAaD,EAAEE,QAAU7B,EAAgB8B,YAAe/B,EAAawB,SAC3ExB,EAAagB,YAAca,EAO7B7B,EAAagC,iBAAiB,QAASxB,GACvCR,EAAagC,iBAAiB,OAAQpB,GACtCZ,EAAagC,iBAAiB,QAASpB,GACvCZ,EAAagC,iBAAiB,aAAcV,GAC5CnB,EAAc6B,iBAAiB,QAASxB,GACxCF,EAAgB2B,QAAQ,SAAAC,GAAUA,OAAAA,EAAOF,iBAAiB,QAASjB,KACnEX,EAAe6B,QAAQ,SAAAE,GAASA,OAAAA,EAAMH,iBAAiB,SAAUb,KACjEf,EAAe6B,QAAQ,SAAAE,GAASA,OAAAA,EAAMH,iBAAiB,YAAab,KACpElB,EAAgB+B,iBAAiB,QAASL,GAC1C1B,EAAgB+B,iBAAiB,YAAa,SAAAJ,GAAKrB,OAAAA,GAAaoB,EAAMC,KACtE3B,EAAgB+B,iBAAiB,YAAa,WAC5CzB,GAAY,IAEdN,EAAgB+B,iBAAiB,UAAW,WAC1CzB,GAAY","file":"scripts.fa4b4b85.js","sourceRoot":"../src","sourcesContent":["/*\n * Elements\n */\n\nconst playerElement = document.querySelector('.js-player');\nconst videoElement = playerElement.querySelector('.js-video');\nconst progressElement = playerElement.querySelector('.js-progress');\nconst progressBarElement = playerElement.querySelector('.js-progress-bar');\nconst toggleElement = playerElement.querySelector('.js-toggle');\nconst sliderElements = playerElement.querySelectorAll('.js-slider');\nconst skipBtnElements = playerElement.querySelectorAll('.js-skip');\n\n/*\n * Variables\n */\n\nlet mouseDown = false;\n\n/*\n * Functions\n */\n\nfunction togglePlay() {\n  if (videoElement.paused) {\n    videoElement.play();\n  } else {\n    videoElement.pause();\n  }\n}\n\nfunction updateButton() {\n  const icon = this.paused ? '►' : '❚ ❚';\n  toggleElement.textContent = icon;\n}\n\nfunction skip() {\n  videoElement.currentTime += parseFloat(this.dataset.skip);\n}\n\nfunction handleRangeUpdate() {\n  videoElement[this.name] = this.value;\n}\n\nfunction handleProgress() {\n  const percent = (videoElement.currentTime / videoElement.duration) * 100;\n  progressBarElement.style.flexBasis = `${percent}%`;\n}\n\nfunction scrub(e) {\n  const scrubTime = (e.offsetX / progressElement.offsetWidth) * videoElement.duration;\n  videoElement.currentTime = scrubTime;\n}\n\n/*\n * Event listeners\n */\n\nvideoElement.addEventListener('click', togglePlay);\nvideoElement.addEventListener('play', updateButton);\nvideoElement.addEventListener('pause', updateButton);\nvideoElement.addEventListener('timeupdate', handleProgress);\ntoggleElement.addEventListener('click', togglePlay);\nskipBtnElements.forEach(button => button.addEventListener('click', skip));\nsliderElements.forEach(range => range.addEventListener('change', handleRangeUpdate));\nsliderElements.forEach(range => range.addEventListener('mousemove', handleRangeUpdate));\nprogressElement.addEventListener('click', scrub);\nprogressElement.addEventListener('mousemove', e => mouseDown && scrub(e));\nprogressElement.addEventListener('mousedown', () => {\n  mouseDown = true;\n});\nprogressElement.addEventListener('mouseup', () => {\n  mouseDown = false;\n});\n"]}