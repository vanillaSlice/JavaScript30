{"version":3,"sources":["08 - Fun with HTML5 Canvas/scripts/index.js"],"names":["instructionsElement","document","querySelector","drawElement","context","getContext","isDrawing","lastX","lastY","hue","growing","resize","oldImageData","getImageData","width","height","window","innerWidth","innerHeight","lineJoin","lineCap","lineWidth","putImageData","handlePress","e","preventDefault","stopPropagation","type","target","targetTouches","clientX","clientY","offsetX","offsetY","draw","x","y","remove","strokeStyle","beginPath","moveTo","lineTo","stroke","stopDrawing","addEventListener"],"mappings":";AAIA,IAAMA,EAAsBC,SAASC,cAAc,oBAC7CC,EAAcF,SAASC,cAAc,YACrCE,EAAUD,EAAYE,WAAW,MAMnCC,GAAY,EACZC,EAAQ,EACRC,EAAQ,EACRC,EAAM,EACNC,GAAU,EAMd,SAASC,IACDC,IAAAA,EAAeR,EAAQS,aAAa,EAAG,EAAGV,EAAYW,MAAOX,EAAYY,QAC/EZ,EAAYW,MAAQE,OAAOC,WAC3Bd,EAAYY,OAASC,OAAOE,YAC5Bd,EAAQe,SAAW,QACnBf,EAAQgB,QAAU,QAClBhB,EAAQiB,UAAY,IACpBjB,EAAQkB,aAAaV,EAAc,EAAG,GAGxC,SAASW,EAAYC,GAIfA,GAHJA,EAAEC,iBACFD,EAAEE,kBACFpB,GAAY,EACG,eAAXkB,EAAEG,KAAuB,CACrBC,IAAAA,EAASJ,EAAEK,cAAc,GACd,EAAA,CAACD,EAAOE,QAASF,EAAOG,SAAxCxB,EAF0B,EAAA,GAEnBC,EAFmB,EAAA,OAGtB,CACY,IAAA,EAAA,CAACgB,EAAEQ,QAASR,EAAES,SAA9B1B,EADI,EAAA,GACGC,EADH,EAAA,IAKT,SAAS0B,EAAKV,GAER,GAAClB,EAAD,CAOA6B,IAAAA,EACAC,EACAZ,GALJxB,EAAoBqC,SAKL,cAAXb,EAAEG,KAAsB,CACpBC,IAAAA,EAASJ,EAAEK,cAAc,GACtB,EAAA,CAACD,EAAOE,QAASF,EAAOG,SAAhCI,EAFyB,EAAA,GAEtBC,EAFsB,EAAA,OAGrB,CACI,IAAA,EAAA,CAACZ,EAAEQ,QAASR,EAAES,SAAtBE,EADI,EAAA,GACDC,EADC,EAAA,GAKPhC,EAAQkC,YAAqB7B,OAAAA,OAAAA,EAA7B,gBACAL,EAAQmC,YACRnC,EAAQoC,OAAOjC,EAAOC,GACtBJ,EAAQqC,OAAON,EAAGC,GAClBhC,EAAQsC,SACPnC,EAAiB4B,EAAV3B,EAAa4B,GAGrB3B,GAAO,IACI,MACTA,EAAM,IAIRC,EAAWA,GAAWN,EAAQiB,UAAY,MAAUX,GAAWN,EAAQiB,WAAa,GAElFjB,EAAQiB,WAAa,EAErBjB,EAAQiB,WAAa,GAIzB,SAASsB,IACPrC,GAAY,EAOdU,OAAO4B,iBAAiB,SAAUjC,GAClCR,EAAYyC,iBAAiB,YAAarB,GAC1CpB,EAAYyC,iBAAiB,aAAcrB,GAC3CpB,EAAYyC,iBAAiB,YAAaV,GAC1C/B,EAAYyC,iBAAiB,YAAaV,GAC1C/B,EAAYyC,iBAAiB,UAAWD,GACxCxC,EAAYyC,iBAAiB,WAAYD,GACzCxC,EAAYyC,iBAAiB,WAAYD,GACzCxC,EAAYyC,iBAAiB,cAAeD,GAC5ChC","file":"scripts.bdd4fca9.js","sourceRoot":"../src","sourcesContent":["/*\n * Elements\n */\n\nconst instructionsElement = document.querySelector('.js-instructions');\nconst drawElement = document.querySelector('.js-draw');\nconst context = drawElement.getContext('2d');\n\n/*\n * Variables\n */\n\nlet isDrawing = false;\nlet lastX = 0;\nlet lastY = 0;\nlet hue = 0;\nlet growing = false;\n\n/*\n * Functions\n */\n\nfunction resize() {\n  const oldImageData = context.getImageData(0, 0, drawElement.width, drawElement.height);\n  drawElement.width = window.innerWidth;\n  drawElement.height = window.innerHeight;\n  context.lineJoin = 'round';\n  context.lineCap = 'round';\n  context.lineWidth = 100;\n  context.putImageData(oldImageData, 0, 0);\n}\n\nfunction handlePress(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  isDrawing = true;\n  if (e.type === 'touchstart') {\n    const target = e.targetTouches[0];\n    [lastX, lastY] = [target.clientX, target.clientY];\n  } else {\n    [lastX, lastY] = [e.offsetX, e.offsetY];\n  }\n}\n\nfunction draw(e) {\n  // stop if not drawing\n  if (!isDrawing) {\n    return;\n  }\n\n  instructionsElement.remove(); // make sure p is no longer displaying\n\n  // get x and y\n  let x;\n  let y;\n  if (e.type === 'touchmove') {\n    const target = e.targetTouches[0];\n    [x, y] = [target.clientX, target.clientY];\n  } else {\n    [x, y] = [e.offsetX, e.offsetY];\n  }\n\n  // draw the line\n  context.strokeStyle = `hsl(${hue}, 100%, 50%)`;\n  context.beginPath();\n  context.moveTo(lastX, lastY);\n  context.lineTo(x, y);\n  context.stroke();\n  [lastX, lastY] = [x, y];\n\n  // update colour\n  hue += 1;\n  if (hue >= 360) {\n    hue = 0;\n  }\n\n  // update line width\n  growing = (growing && context.lineWidth < 100) || (!growing && context.lineWidth <= 1);\n  if (growing) {\n    context.lineWidth += 1;\n  } else {\n    context.lineWidth -= 1;\n  }\n}\n\nfunction stopDrawing() {\n  isDrawing = false;\n}\n\n/*\n * Initialise\n */\n\nwindow.addEventListener('resize', resize);\ndrawElement.addEventListener('mousedown', handlePress);\ndrawElement.addEventListener('touchstart', handlePress);\ndrawElement.addEventListener('mousemove', draw);\ndrawElement.addEventListener('touchmove', draw);\ndrawElement.addEventListener('mouseup', stopDrawing);\ndrawElement.addEventListener('mouseout', stopDrawing);\ndrawElement.addEventListener('touchend', stopDrawing);\ndrawElement.addEventListener('touchcancel', stopDrawing);\nresize();\n"]}