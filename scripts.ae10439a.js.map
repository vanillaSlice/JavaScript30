{"version":3,"sources":["06 - Type Ahead/scripts/index.js"],"names":["endpoint","cities","searchInputElement","document","querySelector","suggestionsElement","findMatches","wordToMatch","filter","place","regex","RegExp","city","match","state","numberWithCommas","x","toString","replace","displayMatches","html","value","map","cityName","stateName","population","join","innerHTML","addEventListener","fetch","then","blob","json","data","push"],"mappings":";AA6CA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAzCA,IAAMA,EAAW,4HACXC,EAAS,GACTC,EAAqBC,SAASC,cAAc,oBAC5CC,EAAqBF,SAASC,cAAc,mBAMlD,SAASE,EAAYC,GACZN,OAAAA,EAAOO,OAAO,SAACC,GACdC,IAAAA,EAAQ,IAAIC,OAAOJ,EAAa,MAC/BE,OAAAA,EAAMG,KAAKC,MAAMH,IAAUD,EAAMK,MAAMD,MAAMH,KAIxD,SAASK,EAAiBC,GACjBA,OAAAA,EAAEC,WAAWC,QAAQ,wBAAyB,KAGvD,SAASC,IAAiB,IAAA,EAAA,KAElBC,EADUd,EAAY,KAAKe,OACZC,IAAI,SAACb,GAClBC,IAAAA,EAAQ,IAAIC,OAAO,EAAKU,MAAO,MAC/BE,EAAWd,EAAMG,KAAKM,QAAQR,EAAO,SAAAG,GAAoCA,MAAAA,2BAAAA,OAAAA,EAA/B,aAC1CW,EAAYf,EAAMK,MAAMI,QAAQR,EAAO,SAAAG,GAAoCA,MAAAA,2BAAAA,OAAAA,EAA/B,aAEzBU,MAAAA,4DAAAA,OAAAA,EAAaC,MAAAA,OAAAA,EACPT,8CAAAA,OAAAA,EAAiBN,EAAMgB,YAFtD,0BAICC,KAAK,IACRrB,EAAmBsB,UAAYP,EAOjClB,EAAmB0B,iBAAiB,SAAUT,GAC9CjB,EAAmB0B,iBAAiB,QAAST,GAE7CU,MAAM7B,GACH8B,KAAK,SAAAC,GAAQA,OAAAA,EAAKC,SAClBF,KAAK,SAAAG,GAAQhC,OAAAA,EAAOiC,KAAPjC,MAAAA,EAAegC,EAAAA","file":"scripts.ae10439a.js","sourceRoot":"../src","sourcesContent":["/*\n * Elements\n */\n\nconst endpoint = 'https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json';\nconst cities = [];\nconst searchInputElement = document.querySelector('.js-search-input');\nconst suggestionsElement = document.querySelector('.js-suggestions');\n\n/*\n * Functions\n */\n\nfunction findMatches(wordToMatch) {\n  return cities.filter((place) => {\n    const regex = new RegExp(wordToMatch, 'gi');\n    return place.city.match(regex) || place.state.match(regex);\n  });\n}\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nfunction displayMatches() {\n  const matches = findMatches(this.value);\n  const html = matches.map((place) => {\n    const regex = new RegExp(this.value, 'gi');\n    const cityName = place.city.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n    const stateName = place.state.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n    return `<li class=\"suggestion-item\">\n        <span class=\"name\">${cityName}, ${stateName}</span>\n        <span class=\"population\">${numberWithCommas(place.population)}</span>\n      </li>`;\n  }).join('');\n  suggestionsElement.innerHTML = html;\n}\n\n/*\n * Initialise\n */\n\nsearchInputElement.addEventListener('change', displayMatches);\nsearchInputElement.addEventListener('keyup', displayMatches);\n\nfetch(endpoint)\n  .then(blob => blob.json())\n  .then(data => cities.push(...data));\n"]}