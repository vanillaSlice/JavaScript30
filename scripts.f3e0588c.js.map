{"version":3,"sources":["04 - Array Cardio Day 1/scripts/index.js"],"names":["inventors","first","last","year","passed","people","fifteen","filter","i","console","table","fullNames","map","log","ordered","sort","a","b","totalYears","reduce","t","oldest","alphabetical","aLast","split","data","transportation","total","vehicle","Object","prototype","hasOwnProperty","call"],"mappings":";AAMA,IAAMA,EAAY,CAAC,CACjBC,MAAO,SACPC,KAAM,WACNC,KAAM,KACNC,OAAQ,MAEV,CACEH,MAAO,QACPC,KAAM,SACNC,KAAM,KACNC,OAAQ,MAEV,CACEH,MAAO,UACPC,KAAM,UACNC,KAAM,KACNC,OAAQ,MAEV,CACEH,MAAO,QACPC,KAAM,QACNC,KAAM,KACNC,OAAQ,MAEV,CACEH,MAAO,WACPC,KAAM,SACNC,KAAM,KACNC,OAAQ,MAEV,CACEH,MAAO,WACPC,KAAM,aACNC,KAAM,KACNC,OAAQ,MAEV,CACEH,MAAO,MACPC,KAAM,SACNC,KAAM,KACNC,OAAQ,MAEV,CACEH,MAAO,YACPC,KAAM,WACNC,KAAM,KACNC,OAAQ,MAEV,CACEH,MAAO,MACPC,KAAM,WACNC,KAAM,KACNC,OAAQ,MAEV,CACEH,MAAO,WACPC,KAAM,QACNC,KAAM,KACNC,OAAQ,MAEV,CACEH,MAAO,OACPC,KAAM,UACNC,KAAM,KACNC,OAAQ,MAEV,CACEH,MAAO,QACPC,KAAM,cACNC,KAAM,KACNC,OAAQ,OAIJC,EAAS,CACb,cACA,eACA,kBACA,gBACA,iBACA,oBACA,kBACA,kBACA,eACA,mBACA,kBACA,oBACA,mBACA,aACA,sBACA,gBACA,cACA,iBACA,cACA,kBACA,iBACA,gBACA,iBACA,cACA,mBACA,cACA,eACA,iBACA,eACA,iBACA,aACA,gBACA,kBACA,cACA,iBACA,gBACA,qBACA,aACA,gBACA,cACA,kBAKIC,EAAUN,EAAUO,OAAO,SAAAC,GAAKA,OAAAA,EAAEL,MAAQ,MAAQK,EAAEL,KAAO,OACjEM,QAAQC,MAAMJ,GAId,IAAMK,EAAYX,EAAUY,IAAI,SAAAJ,GAAQA,MAAAA,GAAAA,OAAAA,EAAEP,MAASO,KAAAA,OAAAA,EAAEN,QACrDO,QAAQI,IAAIF,GAIZ,IAAMG,EAAUd,EAAUe,KAAK,SAACC,EAAGC,GAAMD,OAAAA,EAAEb,KAAOc,EAAEd,OACpDM,QAAQC,MAAMI,GAId,IAAMI,EAAalB,EAAUmB,OAAO,SAACC,EAAGZ,GAAMY,OAAAA,EAAIZ,EAAEJ,OAASI,EAAEL,MAAM,GACrEM,QAAQI,IAAIK,GAGZ,IAAMG,EAASrB,EAAUe,KAAK,SAACC,EAAGC,GAAOA,OAAAA,EAAEb,OAASa,EAAEd,MAASa,EAAEZ,OAASY,EAAEb,QAC5EM,QAAQC,MAAMW,GAad,IAAMC,EAAejB,EAAOU,KAAK,SAACC,EAAGC,GAG5BM,OAFOP,EAAEQ,MAAM,MAAM,GACdP,EAAEO,MAAM,MAAM,GACL,GAAK,IAE9Bf,QAAQI,IAAIS,GAIZ,IAAMG,EAAO,CACX,MACA,MACA,QACA,QACA,OACA,OACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,SAEIC,EAAiBD,EAAKN,OAAO,SAACQ,EAAOC,GAMlCD,OALHE,OAAOC,UAAUC,eAAeC,KAAKL,EAAOC,GAC9CD,EAAMC,IAAY,EAElBD,EAAMC,GAAW,EAEZD,GACN,IACHlB,QAAQI,IAAIa","file":"scripts.f3e0588c.js","sourceRoot":"../src","sourcesContent":["/*\n  eslint-disable\n    no-param-reassign,\n    no-console,\n*/\n\nconst inventors = [{\n  first: 'Albert',\n  last: 'Einstein',\n  year: 1879,\n  passed: 1955,\n},\n{\n  first: 'Isaac',\n  last: 'Newton',\n  year: 1643,\n  passed: 1727,\n},\n{\n  first: 'Galileo',\n  last: 'Galilei',\n  year: 1564,\n  passed: 1642,\n},\n{\n  first: 'Marie',\n  last: 'Curie',\n  year: 1867,\n  passed: 1934,\n},\n{\n  first: 'Johannes',\n  last: 'Kepler',\n  year: 1571,\n  passed: 1630,\n},\n{\n  first: 'Nicolaus',\n  last: 'Copernicus',\n  year: 1473,\n  passed: 1543,\n},\n{\n  first: 'Max',\n  last: 'Planck',\n  year: 1858,\n  passed: 1947,\n},\n{\n  first: 'Katherine',\n  last: 'Blodgett',\n  year: 1898,\n  passed: 1979,\n},\n{\n  first: 'Ada',\n  last: 'Lovelace',\n  year: 1815,\n  passed: 1852,\n},\n{\n  first: 'Sarah E.',\n  last: 'Goode',\n  year: 1855,\n  passed: 1905,\n},\n{\n  first: 'Lise',\n  last: 'Meitner',\n  year: 1878,\n  passed: 1968,\n},\n{\n  first: 'Hanna',\n  last: 'HammarstrÃ¶m',\n  year: 1829,\n  passed: 1909,\n},\n];\n\nconst people = [\n  'Beck, Glenn',\n  'Becker, Carl',\n  'Beckett, Samuel',\n  'Beddoes, Mick',\n  'Beecher, Henry',\n  'Beethoven, Ludwig',\n  'Begin, Menachem',\n  'Belloc, Hilaire',\n  'Bellow, Saul',\n  'Benchley, Robert',\n  'Benenson, Peter',\n  'Ben-Gurion, David',\n  'Benjamin, Walter',\n  'Benn, Tony',\n  'Bennington, Chester',\n  'Benson, Leana',\n  'Bent, Silas',\n  'Bentsen, Lloyd',\n  'Berger, Ric',\n  'Bergman, Ingmar',\n  'Berio, Luciano',\n  'Berle, Milton',\n  'Berlin, Irving',\n  'Berne, Eric',\n  'Bernhard, Sandra',\n  'Berra, Yogi',\n  'Berry, Halle',\n  'Berry, Wendell',\n  'Bethea, Erin',\n  'Bevan, Aneurin',\n  'Bevel, Ken',\n  'Biden, Joseph',\n  'Bierce, Ambrose',\n  'Biko, Steve',\n  'Billings, Josh',\n  'Biondo, Frank',\n  'Birrell, Augustine',\n  'Black, Elk',\n  'Blair, Robert',\n  'Blair, Tony',\n  'Blake, William',\n];\n\n// Array.prototype.filter()\n// 1. Filter the list of inventors for those who were born in the 1500's\nconst fifteen = inventors.filter(i => i.year >= 1500 && i.year < 1600);\nconsole.table(fifteen);\n\n// Array.prototype.map()\n// 2. Give us an array of the inventors' first and last names\nconst fullNames = inventors.map(i => `${i.first} ${i.last}`);\nconsole.log(fullNames);\n\n// Array.prototype.sort()\n// 3. Sort the inventors by birthdate, oldest to youngest\nconst ordered = inventors.sort((a, b) => a.year - b.year);\nconsole.table(ordered);\n\n// Array.prototype.reduce()\n// 4. How many years did all the inventors live?\nconst totalYears = inventors.reduce((t, i) => t + i.passed - i.year, 0);\nconsole.log(totalYears);\n\n// 5. Sort the inventors by years lived\nconst oldest = inventors.sort((a, b) => (b.passed - b.year) - (a.passed - a.year));\nconsole.table(oldest);\n\n// 6. create a list of Boulevards in Paris that contain 'de' anywhere in the name\n// https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris\n// const category = document.querySelector('.mw-category');\n// const links = Array.from(category.querySelectorAll('a'));\n// const de = links\n//   .map(link => link.textContent)\n//   .filter(streetName => streetName.includes('de'));\n// console.log(de);\n\n// 7. sort Exercise\n// Sort the people alphabetically by last name\nconst alphabetical = people.sort((a, b) => {\n  const aLast = a.split(', ')[0];\n  const bLast = b.split(', ')[0];\n  return aLast > bLast ? 1 : -1;\n});\nconsole.log(alphabetical);\n\n// 8. Reduce Exercise\n// Sum up the instances of each of these\nconst data = [\n  'car',\n  'car',\n  'truck',\n  'truck',\n  'bike',\n  'walk',\n  'car',\n  'van',\n  'bike',\n  'walk',\n  'car',\n  'van',\n  'car',\n  'truck',\n];\nconst transportation = data.reduce((total, vehicle) => {\n  if (Object.prototype.hasOwnProperty.call(total, vehicle)) {\n    total[vehicle] += 1;\n  } else {\n    total[vehicle] = 1;\n  }\n  return total;\n}, {});\nconsole.log(transportation);\n"]}